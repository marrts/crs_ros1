<?xml version="1.0"?>
<launch>
  <!-- ur10e_bringup args -->
  <arg name="debug" default="false" doc="Debug flag that will get passed on to ur_common.launch"/>
  <arg name="robot_ip" default="172.31.1.137" doc="IP address by which the robot can be reached."/> <!--WSU UR IP: 192.168.12.59--> <!--SWRI UR IP: 172.31.1.137-->
  <arg name="reverse_port" default="2998" doc="Port that will be opened by the driver to allow direct communication between the driver and the robot controller."/>
<!--  <arg name="reverse_port" default="50001" doc="Port that will be opened by the driver to allow direct communication between the driver and the robot controller."/>-->
<!--<arg name="script_sender_port" default="50002" doc="The driver will offer an interface to receive the program's URScript on this port. If the robot cannot connect to this port, `External Control` will stop immediately."/>-->
  <arg name="script_sender_port" default="2999" doc="The driver will offer an interface to receive the program's URScript on this port. If the robot cannot connect to this port, `External Control` will stop immediately."/>
  <arg name="tf_prefix" default="" doc="tf_prefix used for the robot."/>
  <arg name="controllers" default="joint_state_controller speed_scaling_state_controller force_torque_sensor_controller scaled_pos_traj_controller" doc="Controllers that are activated by default."/>
  <arg name="stopped_controllers" default="pos_compliance_controller vel_compliance_controller" doc="Controllers that are initally loaded, but not started."/>
  <arg name="controller_config_file" default="$(find crs_support_ros1)/config/ur10e_controllers.yaml" doc="Config file used for defining the ROS-Control controllers."/>
  <arg name="robot_description_file" default="$(find crs_support_ros1)/launch/ur10e_upload.launch" doc="Robot description launch file."/>
  <arg name="kinematics_config" default="$(find ur_e_description)/config/ur10e_default.yaml" doc="Kinematics config file used for calibration correction. This will be used to verify the robot's calibration is matching the robot_description."/>
  <arg name="use_tool_communication" default="false" doc="On e-Series robots tool communication can be enabled with this argument"/>
  <arg name="tool_voltage" default="0" doc="Tool voltage set at the beginning of the UR program. Only used, when `use_tool_communication` is set to true."/>
  <arg name="tool_parity" default="0" doc="Parity configuration used for tool communication. Only used, when `use_tool_communication` is set to true."/>
  <arg name="tool_baud_rate" default="115200" doc="Baud rate used for tool communication. Only used, when `use_tool_communication` is set to true."/>
  <arg name="tool_stop_bits" default="1" doc="Number of stop bits used for tool communication. Only used, when `use_tool_communication` is set to true."/>
  <arg name="tool_rx_idle_chars" default="1.5" doc="Number of idle chars in RX channel used for tool communication. Only used, when `use_tool_communication` is set to true."/>
  <arg name="tool_tx_idle_chars" default="3.5" doc="Number of idle chars in TX channel used for tool communication. Only used, when `use_tool_communication` is set to true."/>
  <arg name="tool_device_name" default="/tmp/ttyUR" doc="Local device name used for tool communication. Only used, when `use_tool_communication` is set to true."/>
  <arg name="tool_tcp_port" default="54321" doc="Port on which the robot controller publishes the tool comm interface. Only used, when `use_tool_communication` is set to true."/>
  <arg name="limited" default="false" doc="Use the description in limited mode (Every axis rotates from -PI to PI)"/>
  <arg name="headless_mode" default="true" doc="Automatically send URScript to robot to execute. On e-Series this does require the robot to be in 'remote-control' mode. With this, the URCap is not needed on the robot."/>

  <!-- Arg to record rosbag data -->
  <arg name="record_algo_io" default="true" />

   <!-- Bringup the UR10e -->
   <remap from="/scaled_pos_traj_controller/follow_joint_trajectory" to="/crs/follow_joint_trajectory"/>
   <remap from="/joint_states" to="/crs/joint_states"/>
  <include file="$(find crs_support_ros1)/launch/ur_common.launch">
    <arg name="debug" value="$(arg debug)"/>
    <arg name="use_tool_communication" value="$(arg use_tool_communication)"/>
    <arg name="controller_config_file" value="$(arg controller_config_file)"/>
    <arg name="robot_description_file" value="$(arg robot_description_file)"/>
    <arg name="kinematics_config" value="$(arg kinematics_config)"/>
    <arg name="robot_ip" value="$(arg robot_ip)"/>
    <arg name="reverse_port" value="$(arg reverse_port)"/>
    <arg name="script_sender_port" value="$(arg script_sender_port)"/>
    <arg name="limited" value="$(arg limited)"/>
    <arg name="tf_prefix" value="$(arg tf_prefix)"/>
    <arg name="controllers" value="$(arg controllers)"/>
    <arg name="stopped_controllers" value="$(arg stopped_controllers)"/>
    <arg name="headless_mode" value="$(arg headless_mode)"/>
    <arg name="tool_voltage" value="$(arg tool_voltage)"/>
    <arg name="tool_parity" value="$(arg tool_parity)"/>
    <arg name="tool_baud_rate" value="$(arg tool_baud_rate)"/>
    <arg name="tool_stop_bits" value="$(arg tool_stop_bits)"/>
    <arg name="tool_rx_idle_chars" value="$(arg tool_rx_idle_chars)"/>
    <arg name="tool_tx_idle_chars" value="$(arg tool_tx_idle_chars)"/>
    <arg name="tool_device_name" value="$(arg tool_device_name)"/>
    <arg name="tool_tcp_port" value="$(arg tool_tcp_port)"/>
  </include>

  <node name="compliance_traj_action" pkg="crs_motion_execution" type="compliance_trajectory_server" ns="crs"/>
  <node name="crs_robot_comms" pkg="crs_robot_comms" type="crs_robot_comms_robot_comms_server" ns="crs"/>


</launch>
